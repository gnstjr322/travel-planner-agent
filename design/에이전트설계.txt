# LangGraph를 이용한 여행 계획 멀티 에이전트 시스템 설계

## 1. 개요
- **프레임워크**: LangGraph를 사용하여 유연하고 상태 기반의 멀티 에이전트 워크플로우를 구축합니다.
- **핵심 구조**: 중앙 `Supervisor` 에이전트가 사용자 요청을 해석하고, 각 기능에 특화된 `Worker` 에이전트들에게 작업을 분배하는 'Agent State' 기반의 라우팅 방식을 채택합니다.
- **상호작용**: 에이전트는 필요한 경우 다른 에이전트나 도구를 호출하여 협업합니다.

---

## 2. Supervisor (중앙 관리자 에이전트)
- **역할**: 모든 에이전트의 작업을 총괄하고 워크플로우를 관리하는 오케스트레이터입니다.
- **주요 기능**:
    - **요청 분석**: 사용자의 자연어 요청(의도, 감정, 핵심 키워드)을 분석하여 가장 적합한 다음 작업을 결정합니다. (예: "맛집만 추천" -> `LocationSearchAgent` 호출)
    - **에이전트 라우팅**: 분석된 요청에 따라 `PlannerAgent`, `LocationSearchAgent` 등 적절한 워커 에이전트를 호출합니다.
    - **상태 관리**: 전체 대화의 상태(State)를 관리하며, 에이전트 간 작업 결과를 전달합니다.
    - **사용자 상호작용**: 정보가 부족하거나 사용자 확인이 필요할 때, 명확한 질문을 통해 추가 정보를 요청합니다. (예: "가족 구성원이 어떻게 되나요?", "어떤 테마를 원하세요?")
    - **최종 응답 생성**: 모든 작업이 완료되면, 최종 결과를 사용자에게 전달합니다.

---

## 3. Worker Agents (작업자 에이전트)

### 3.1. PlannerAgent (여행 계획 에이전트)
- **역할**: 사용자의 요구사항(기간, 테마, 동선 등)에 맞춰 전체 여행 일정을 생성, 수정, 제안합니다.
- **주요 기능**:
    - 여행 일정 초안 생성 및 구체화
    - 기존 일정 조회 및 수정
    - 시간, 동선, 테마(힐링, 맛집, 가족)를 고려한 맞춤형 일정 구성
- **필요 도구**:
    - `create_travel_plan`: 여행 계획 데이터 구조를 생성하는 도구
    - `modify_travel_plan`: 기존 계획을 수정하는 도구
    - (필요 시) `LocationSearchAgent`, `VerifierAgent` 호출

### 3.2. LocationSearchAgent (장소 검색 에이전트)
- **역할**: 여행 계획에 필요한 장소(관광지, 맛집, 숙소, 행사) 정보를 검색하고 수집합니다.
- **주요 기능**:
    - 키워드 기반 장소 검색
    - 테마/조건(가족 친화, 1인 여행, 자연 등)에 맞는 장소 필터링
    - 실시간 이벤트 및 축제 정보 검색
- **필요 도구**: services/google_search_service.py 참고고
    - `web_search_tool`: 웹 검색을 위한 API (Google)
    - `map_search_tool`: 지도 기반 정보(위치, 경로)를 위한 API (Kakao Maps)

### 3.3. VerifierAgent (정보 검증 에이전트)
- **역할**: 에이전트가 수집하거나 생성한 정보의 신뢰성을 검증하여 '환각(Hallucination)'을 최소화합니다.
- **주요 기능**:
    - 장소 정보 검증 (운영 시간, 휴무일, 폐업 여부)
    - 실시간 정보 확인 (날씨, 교통, 혼잡도)
    - 여행 정보의 안전성 및 적합성 검토 (e.g., 1인 여행 안전, 가족 접근성)
    - 공유 전 개인정보 포함 여부 검토
- **필요 도구**:
    - `fact_check_tool`: 공식 웹사이트, 신뢰할 수 있는 소스를 교차 확인하는 웹 검색 도구
    - `weather_api_tool`: 특정 지역 및 시간의 날씨 정보 조회 API
    - `pii_scan_tool`: 개인정보 포함 여부를 스캔하는 도구

### 3.4. CalendarAgent (캘린더 연동 에이전트)
- **역할**: 확정된 여행 일정을 사용자의 외부 캘린더에 등록하고 관리합니다.
- **주요 기능**:
    - 신규 일정 등록
    - 기존 일정 조회, 수정, 삭제
- **필요 도구**: services/kakao_calendar_service.py 참고
    - `create_calendar_event`: 캘린더 신규 일정 등록 API
    - `read_calendar_events`: 캘린더 일정 조회 API
    - `update_calendar_event`: 캘린더 일정 수정 API
    - `delete_calendar_event`: 캘린더 일정 삭제 API

### 3.5. SharingAgent (공유 에이전트)
- **역할**: 완성된 여행 계획서를 사용자나 제3자에게 공유 가능한 형태로 변환하고 전달합니다.
- **주요 기능**:
    - 계획서를 텍스트, 이미지, PDF 등 다양한 포맷으로 변환
    - 공유 가능한 고유 링크 생성
- **필요 도구**:
    - `create_share_link_tool`: 계획을 외부에서 볼 수 있는 링크를 생성하는 API

---

## 4. 참고사항
- 에이전트 구현: 각 에이전트는 LangChain의 에이전트 생성 메서드 사용하여 구현
- 점진적 개발: 초기에는 `Supervisor`, `PlannerAgent`, `LocationSearchAgent` 중심으로 개발하고, 점차 다른 에이전트를 추가하며 확장.
- 사용자 확인: 중요한 결정(일정 저장, 수정 등) 단계에서는 사용자에게 확인을 받는 절차를 포함하여 상호작용성을 높임. 
- 절대 키워드 기반 분석 하지 말기.
- 목업데이터로 매칭해서 하는것도 절대 하지 말기.